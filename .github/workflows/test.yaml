name: Test ELF ABI parsing

on:
  pull_request: [] 
 
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        # Testing that all e4s packages with tests produce output
        package:
          - swig
          - qthreads
          - upcxx
          - omega-h
          - hypre
          - slate
          - petsc
          - gasnet
          - strumpack
          - hdf5
          - raja
          - pumi
          - superlu
          - kokkos
          - fortrilinos
          - py-jupyterhub
          - darshan-runtime
          - bolt
          - parsec
          - superlu-dist
          - py-warpx
          - heffte
          - openpmd-api
          - parallel-netcdf
          - py-petsc4py
          - tau
          - papyrus
          - archer
          - aml
          - arborx
          - sundials
          - legion
          - mfem
          - py-libensemble
          - tasmanian
          - nrm
          - openmpi
          - slepc
          - ginkgo
          - hpctoolkit
          - darshan-util
          - caliper          
 
    # Ensure we are consistent in using same gcc version
    container: gcc:12.1
    runs-on: ubuntu-latest
    name: Generate Json for Package
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install Spack
        run: |
          git clone --depth 1 https://github.com/spack/spack /opt/spack
          echo "/opt/spack/bin" >> $GITHUB_PATH
          apt-get update && apt-get install -y python3-dev python3-pip

      - uses: actions/checkout@v3        
      - name: Install Library
        run: |
          # archinfo, pyvex, pyelftools, then cle
          pip install git+https://github.com/angr/archinfo
          pip install git+https://github.com/angr/pyvex
          pip install git+https://github.com/eliben/pyelftools
          pip install .

      - name: Cache Spack Installs
        uses: actions/cache@v3
        with:
          path: /opt/spack/opt/spack
          key: ${{ runner.os }}-build-${{ matrix.package }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.package }}
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Package and Test
        env:
          package: ${{ matrix.package }}
        run: |
           spack install ${package}
           for filename in $(find /opt/spack/opt/spack -name *.so); do
               echo "Testing fact generation for $filename"
               python dev.py ${filename}
           done
